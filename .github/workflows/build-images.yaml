name: Build OrangePi Image

on: 
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        board: [orangepi5, orangepi5b, orangepi5plus, rock5a, rock5b, nanopir6c, nanopir6s, indiedroid-nova]
    runs-on: ubuntu-latest
    env:
      BOARD: ${{ matrix.board }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: ../build
        key: ${{ runner.os }}-build-${{ env.BOARD }}-${{ hashFiles('**/build.sh') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.BOARD }}-
          ${{ runner.os }}-build-

    - name: Install dependencies
      run: |
      sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf bc git wget make libc6-dev libncurses5-dev libncursesw5-dev libssl-dev flex bison
      sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 python-is-python3 fdisk

    - name: Run build scripts
      run: |
        sudo ./build.sh -b ${BOARD} -k
        sudo ./build.sh -b ${BOARD} -u
        sudo ./build.sh -b ${BOARD}

    - name: Upload server image
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}-server-image
        path: ./build/images/ubuntu-22.04.2-preinstalled-server-arm64-"${BOARD}".rootfs.tar.xz

    - name: Upload desktop image
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}-desktop-image
        path: ./build/images/ubuntu-22.04.2-preinstalled-desktop-arm64-"${BOARD}".rootfs.tar.xz
